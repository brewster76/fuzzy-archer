############################################################################################
############################################################################################
############################################################################################
#                                                                                          #
#                                                                                          #
#                          BOOTSTRAP SKIN CONFIGURATION FILE                               #
#                                                                                          #
#                                                                                          #
############################################################################################
#                         Based on the Standard skin configuration file by                 #
#                        Copyright (c) 2010 Tom Keffer <tkeffer@gmail.com>                 #
#                                                                                          #
#                                                                                          #
############################################################################################
#
#
############################################################################################
version = 4.3
[Units]
    [[TimeFormats]]
        # date formats for 'max', 'min', 'maxmin', 'minmax', 'maxsum', 'minsum' of a day
        daily_ext_day         = %X
        daily_ext_week        = %X (%A)
        daily_ext_month       = '%x, %X'
        daily_ext_year        = '%x, %X'
        daily_ext_since_ever  = '%x, %X'
        daily_ext_current     = '%x, %X'
        daily_aggr_day        = %X
        daily_aggr_week       = %A
        daily_aggr_month      = %x
        daily_aggr_year       = %x
        daily_aggr_since_ever = %x
        daily_aggr_current    = %x

[Extras]

    #
    # Put any extra tags here that you want to be available in the templates
    #
    
    # Here's an example. 
    # This radar image would be available as $Extras.radar_img
    # (Comment the line out if you don't want to include the radar image)
    #radar_img = http://radar.weather.gov/ridge/lite/N0R/RTX_loop.gif
    # This URL will be used as the image hyperlink:
    #radar_url = http://radar.weather.gov/ridge/radar.php?product=NCR&rid=RTX&loop=yes
    
    # Here's another. If you have a Google Analytics ID, uncomment and edit 
    # the next line, and the analytics code will be included available
    # in your HTML templates files:
    #googleAnalyticsId = UA-12345678-1

    # "#" for nothing, or a hyperlink to some more information on your location
    location_href = #

    # You can add custom css an js files in css/ and/or js/ folders. They will be added to <head>
    # specify a comma separated list if you want to add more than one item
    # make sure the files reside in their correct folders, only specify the file's names
    #extra_css = custom1.css, custom2.css
    #extra_js = custom1.js, custom2.js
    
############################################################################################

[CheetahGenerator]

    # This section is used by the generator CheetahGenerator, and specifies
    # which files are to be generated from which template.

    encoding = utf8    # Possible encodings are 'html_entities', 'utf8', or 'strict_ascii'
    search_list_extensions = user.historygenerator.MyXSearch

    [[SummaryByMonth]]
        #
        # Reports that summarize "by month"
        #
        [[[NOAA_month]]]
            encoding = strict_ascii
            template = NOAA/NOAA-YYYY-MM.txt.tmpl

    [[SummaryByYear]]
        #
        # Reports that summarize "by year"
        #
        [[[NOAA_year]]]
            encoding = strict_ascii
            template = NOAA/NOAA-YYYY.txt.tmpl

    [[ToDate]]
        #
        # Reports that show statistics "to date", such as day-to-date,
        # week-to-date, year-to-date, etc.
        #
        [[[history]]]
            template = history.html.tmpl

    [[HTMLFiles]]
        #
        # Pages that do not require time interval specific tags
        #
        [[[about]]]
            template = about.html.tmpl

        [[[news]]]
            template = news.html.tmpl

        [[[stats]]]
            template = stats.html.tmpl

        [[[day]]]
            template = day.html.tmpl

        [[[week]]]
            template = week.html.tmpl

        [[[month]]]
            template = month.html.tmpl

        [[[year]]]
            template = year.html.tmpl
        
        [[[live]]]
            template = index.html.tmpl
        
        [[[reportData]]]
            template = reportData.json.tmpl

############################################################################################

[CopyGenerator]

    #
    # This section is used by the generator CopyGenerator
    #

    # List of files that are to be copied at the first invocation of the generator only
    copy_once = css/*, js/*

    # List of files to be copied every time:
    # copy_always =

############################################################################################
[StationInfo]
    # This list determines which station info items will appear in the station info section, as well as in which order.
    # You can define a custom part, to do so, create a template called "customStationInfo.html.inc" and include it in the list
    station_info_items = location, sunRiseSet, moonphase, rain, uptime #, customStationInfo

[Navigation]
    #this section lets you define Elements for the navbar
    # This list determines which navigation items will appear in the navbar, as well as in which order.
    navigation_items = index, stats, history, news, about
    [[index]]
        text = The Weather
        href = index.html
        icon = bi-speedometer
        #title = title for the link that will be shown when mouse is hovering over the navigation item
    [[stats]]
        text = Stats
        href = stats.html
        icon = bi-clipboard2-pulse
    [[history]]
        text = History
        href = history.html
        icon = bi-clipboard2-data
    [[news]]
        text = News
        href = news.html
        icon = bi-chat-left-text
    [[about]]
        text = About
        href = about.html
        icon = bi-question
[HistoryColors]
    # minvalues and colors and fontColors should contain the same number of elements.
    #
    # For example,  the [min_temp] example below, if the minimum temperature measured in
    # a month is between -50 and -10 (degC) then the cell will be shaded in html color code #0029E5.
    #
    # colors = background color
    # fontColors = foreground color [optional, defaults to black if omitted]

    [[outTemp]]
        [[[degree_C]]]
            # These are for Celsius
            minvalues = -50, -30, -28, -26, -24, -22, -20, -18, -16, -14, -12, -10, -8, -6, -4, -2, 0, 2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 45
            colors = "#404240", "#646664", "#8C8A8C", "#B4B2B4", "#CCCECC", "#E4E6E4", "#743274", "#AC32AC", "#CC32CC", "#FC32FC", "#FC9AFC", "#143dde", "#3466FC", "#349AFC", "#34CEFC", "#34FEFC", "#047604", "#049A04", "#04BA04", "#04DE04", "#04FE04", "#FCFE34", "#FCEE34", "#FCDE34", "#FCCE34", "#FCBA34", "#FCAA04", "#FC9A04", "#FC7604", "#FC0204", "#EC0204", "#CC0204", "#BC0204", "#AC0204", "#9C0204", "#8C0204", "#740204", "#5C0204"
            fontColors = "#bbbbbb", "#bbbbbb", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#333333", "#333333", "#333333", "#bbbbbb", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb", "#bbbbbb"
        [[[degree_F]]]
            # Use these for Fahrenheit
            minvalues = -60, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100
            colors =   "#0029E5", "#0186E7", "#02E3EA", "#04EC97", "#05EF3D", "#2BF207", "#8AF408", "#E9F70A", "#F9A90B", "#FC4D0D", "#FF0F2D"
            fontColors =   "#FFFFFF", "#FFFFFF", "#000000", "#000000", "#000000", "#000000", "#000000", "#000000", "#FFFFFF", "#FFFFFF", "#FFFFFF"

    [[rain]]
        [[[mm]]]
            # These are for mm
            minvalues = 0, 25, 50, 75, 100, 150, 200, 250, 300, 350
            colors = "#e6e5fc", "#cccafc", "#acaafc", "#8486fc", "#6c6efc", "#5c5afc", "#fc02fc", "#d402d4", "#9c029c", "#6d016d"
            fontColors = "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#333333", "#333333", "#bbbbbb", "#bbbbbb"
            # if the summary is to be calculated independently, specify here.
            [[[[summary]]]]
                minvalues = 1000, 1100, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900
                colors = "#e6e5fc", "#cccafc", "#acaafc", "#8486fc", "#6c6efc", "#5c5afc", "#fc02fc", "#d402d4", "#9c029c", "#6d016d"
                fontColors = "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#333333", "#333333", "#bbbbbb", "#bbbbbb"
        [[[inch]]]
            # Use these instead for inches
            minvalues = 0, 1, 2, 3, 4, 5, 6, 7, 8, 9
            colors = "#e6e5fc", "#cccafc", "#acaafc", "#8486fc", "#6c6efc", "#5c5afc", "#fc02fc", "#d402d4", "#9c029c", "#6d016d"
            fontColors = "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#333333", "#333333", "#bbbbbb", "#bbbbbb"
             # if the summary is to be calculated independently, specify here.
            [[[[summary]]]]
                minvalues = 40, 44, 48, 52, 56, 60, 64, 68, 72, 76
                colors = "#e6e5fc", "#cccafc", "#acaafc", "#8486fc", "#6c6efc", "#5c5afc", "#fc02fc", "#d402d4", "#9c029c", "#6d016d"
                fontColors = "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#333333", "#333333", "#bbbbbb", "#bbbbbb"

    [[rainRate]]
        [[[mm_per_hour]]]
            # These are for mm per hour
            minvalues = 0, 10, 20, 30, 40, 50, 60, 70, 80, 90
            colors = "#e6e5fc", "#cccafc", "#acaafc", "#8486fc", "#6c6efc", "#5c5afc", "#fc02fc", "#d402d4", "#9c029c", "#6d016d"
            fontColors = "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#333333", "#333333", "#bbbbbb", "#bbbbbb"
        [[[inch_per_hour]]]
            # Use these instead for inches per hour
            minvalues = 0, 0.5, 1, 1.5, 2, 2.5, 3, 3.5, 4, 4.5
            colors = "#e6e5fc", "#cccafc", "#acaafc", "#8486fc", "#6c6efc", "#5c5afc", "#fc02fc", "#d402d4", "#9c029c", "#6d016d"
            fontColors = "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb", "#333333", "#333333", "#bbbbbb", "#bbbbbb"

    [[rainDays]]
        [[[count]]]
            minvalues = 1, 5, 10, 15, 20, 25    
            colors = "#e6e5fc", "#cccafc", "#acaafc", "#8486fc", "#6c6efc", "#5c5afc"
            fontColors = "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb"
            [[[[summary]]]]
                minvalues = 1, 100, 120, 140, 160, 180
                colors = "#e6e5fc", "#cccafc", "#acaafc", "#8486fc", "#6c6efc", "#5c5afc"
                fontColors = "#333333", "#333333", "#333333", "#333333", "#bbbbbb", "#bbbbbb"

    [[windGust]]
        [[[meter_per_second]]]
            minvalues = 0, 0.3, 1.5, 3.3, 5.4, 7.9, 10.7, 13.8, 17.1, 20.7, 24.4, 28.4, 32.6
            colors = "#ffffff", "#72d475", "#10cd24", "#00b900", "#f1eea5", "#f6ef27", "#fed6d3", "#ffb6b3", "#ff9e9a", "#ff8281", "#ff6160", "#ff453c", "#ff200e"
            fontColors = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333"
        [[[km_per_hour]]]
            minvalues = 0, 1, 5, 11, 19, 29, 39, 50, 61, 74, 88, 102, 118
            colors = "#ffffff", "#72d475", "#10cd24", "#00b900", "#f1eea5", "#f6ef27", "#fed6d3", "#ffb6b3", "#ff9e9a", "#ff8281", "#ff6160", "#ff453c", "#ff200e"
            fontColors = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333"
        [[[mile_per_hour]]]
            minvalues = 0, 1, 3, 7, 12, 18, 24, 31, 38, 46, 54, 63, 72
            colors = "#ffffff", "#72d475", "#10cd24", "#00b900", "#f1eea5", "#f6ef27", "#fed6d3", "#ffb6b3", "#ff9e9a", "#ff8281", "#ff6160", "#ff453c", "#ff200e"
            fontColors = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333"
        [[[knot]]]
            minvalues = 0, 1, 3, 6, 10, 16, 21, 27, 33, 40, 47, 54, 63
            colors = "#ffffff", "#72d475", "#10cd24", "#00b900", "#f1eea5", "#f6ef27", "#fed6d3", "#ffb6b3", "#ff9e9a", "#ff8281", "#ff6160", "#ff453c", "#ff200e"
            fontColors = "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333", "#333333"

[HistoryReport]
    #
    # Settings for the HTML month/year color coded summary table generator
    #

    # This list determines which tables will appear in the history report, as well as in which order.
    history_items = min_temp, avg_temp, max_temp, rain, rain_days, max_wind, NOAA

    # Restrict the size of the table by ignoring everything before startdate
    # Specify in unix epoch time. e.g. 1325376000 is 1-Jan-2012
    # Note: whatever you specify as startdate, the whole year (or better: all
    # the values availlable for this year) this startdate is within, will be included in the table.
    #startdate = 1325376000

    # The Raspberry Pi typically takes 15+ seconds to calculate all the summaries with a few years of weather date.
    # refresh_interval is how often in minutes the tables are calculated.
    refresh_interval = 5

    [[min_temp]]
        obs_type = outTemp                 # obs_type can be any weewx reading
        aggregate_type = min               # Any of these: 'sum', 'count', 'avg', 'max', 'min'
        summary_column = true

    #
    # You can also use these aggregate_types:  'max_ge', 'max_le', 'min_le', 'sum_ge' to count days
    # where an observation is ge: greater of equalto, or le: lessthan or equal to a threshold value
    # To specify this threshold, use: aggregate_threshold = [value], [units]
    #
    # e.g Specify temperature threshold of 20C:  aggregate_threshold = 20, degree_C
    #

    [[avg_temp]]
        obs_type = outTemp
        aggregate_type = avg
        summary_column = true

    [[max_temp]]
        obs_type = outTemp
        aggregate_type = max
        summary_column = true

    [[rain]]
        obs_type = rain
        aggregate_type = sum
        summary_column = true

    [[rain_days]]
        obs_type = rain
        colors = rainDays, count # colors are derived from obs_type per default, specify colors from [Colors] to override
        units = ""                        # Override default table units label
        aggregate_type = sum_ge
        aggregate_threshold = 1, mm
        summary_column = true

    [[max_wind]]
        obs_type = windGust
        aggregate_type = max
        summary_column = true

    [[NOAA]]
        #
        # Creates a table of links to NOAA reports with the tag $NOAA_table
        # Comment out [[NOAATable]] if you do not need this.
        #

        # Where to find the NOAA files and how they are named
        # Uses Python datetime convention (docs.python.org/2/library/datetime.html):
        # %Y = YYYY, %y = YY, %m = MM, etc.
        #
        year_filename = NOAA/NOAA-%Y.txt
        month_filename = NOAA/NOAA-%Y-%m.txt

[Stats]
    # This list determines which tables will appear on the stats page, as well as in which order.
    stats_items = outTemp, rain, rainRate, barometer, wind
    [[outTemp]]
        since_ever = true # optional, default true
        [[[max]]]
        [[[min]]]
        [[[maxmin]]]
            show_today = false
        [[[minmax]]]
            show_today = false

    [[rain]]
        [[[sum]]]
            since_ever = false
            show_time = false
        [[[maxsum]]]
            show_today = false
            label = "Maximum daily rainfall" # to be translated, label text must be in [Texts] of each {lang}.conf

    [[rainRate]]
        [[[max]]]
            label = "Maximum rain rate"

    [[barometer]]
        [[[max]]]
        [[[min]]]

    [[wind]]
        [[[max]]]

[News]
    #Put news items here. If you put more news items in your weewx.conf, this dummy items will not be displayed any more
    [[Put date here...]]
        header = "We are up and running"
        body = "Looks like we're up and running..."

############################################################################################
[ImageGenerator]
    #
    # This section lists all the images to be generated, what SQL types are to
    # be included in them, along with many plotting options, such as color or
    # font. There's a default for almost everything, if not specified
    # below. Nevertheless, I've explicitly put in values, to make it easy to see
    # and understand the options.
    #
    # Fonts can be anything accepted by the Python Imaging Library (PIL), which
    # is currently truetype (.ttf), or PIL's own font format (.pil). See
    # http://www.pythonware.com/library/pil/handbook/imagefont.htm for more
    # details.  Note that "font size" is only used with truetype (.ttf)
    # fonts. For others, font size is determined by the bit-mapped size, usually
    # encoded in the file name (e.g., courB010.pil). If a font can't be found,
    # then a default font will be used.
    #

    #
    # Anti-aliasing
    #
    anti_alias = 3
    width = 1

    show_daynight = true

    # These control the appearance of the bands if they are shown.
    # Here's a monochrome scheme:
    # daynight_day_color   = 0xdfdfdf
    # daynight_night_color = 0xffff00
    # daynight_edge_color  = 0xd0d0d0
    # Here's an alternative, using a blue/yellow tint:
    # daynight_day_color   = 0xf8ffff
    # daynight_night_color = 0xfff8f8
    # daynight_edge_color  = 0xf8f8ff

    # Richie's day-night colors
    # daynight_day_color   = 0xf8ffff
    # daynight_night_color = 0xbcffde
    # daynight_edge_color  = 0xd9ffd1

    # Nick's values - frankly monochrome is best
    daynight_day_color   = 0xdfdfdf
    daynight_night_color = 0xbbbbbb
    daynight_edge_color  = 0xd0d0d0

    image_width = 451
    image_height = 275

    # width and height for large images, default 900x600
    large_image_width = 900
    large_image_height = 600

    image_background_color = 0xffffff

    chart_background_color = 0xffffff
    chart_gridline_color = 0xa0a0a0

    top_label_font_path = font/FreeMonoBold.ttf
    top_label_font_size = 14

    unit_label_font_path = font/FreeMonoBold.ttf
    unit_label_font_size = 10
    unit_label_font_color = 0x000000

    bottom_label_font_path = font/FreeMonoBold.ttf
    bottom_label_font_size = 10
    bottom_label_font_color = 0x000000

    axis_label_font_path = font/FreeMonoBold.ttf
    axis_label_font_size = 10
    axis_label_font_color = 0x000000

    # Options for the compass rose, used for progressive vector plots
    rose_label = N
    rose_label_font_path = font/FreeMonoBold.ttf
    rose_label_font_size  = 12
    rose_label_font_color = 0x000000

    # Default colors for the plot lines. These can be overridden for
    # individual lines using option 'color'
    chart_line_colors = 0xb48242, 0x4242b4, 0x42b442

    # Type of line. Only 'solid' or 'none' is offered now
    line_type = 'solid'

    # Size of marker in pixels
    marker_size = 8
    # Type of marker. Pick one of 'cross', 'x', 'circle', 'box', or 'none'
    marker_type ='none'

    ##
    ## What follows is a list of subsections, each specifying a time span, such
    ## as a day, week, month, or year. There's nothing special about them or
    ## their names: it's just a convenient way to group plots with a time span
    ## in common. You could add a time span [[biweek_images]] and add the
    ## appropriate time length, aggregation strategy, etc., without changing any
    ## code.
    ##
    ## Within each time span, each sub-subsection is the name of a plot to be
    ## generated for that time span. The generated plot will be stored using
    ## that name, in whatever directory was specified by option 'HTML_ROOT'
    ## in weewx.conf.
    ##
    ## With one final nesting (four brackets!) is the sql type of each line to
    ## be included within that plot.
    ##
    ## Unless overridden, leaf nodes inherit options from their parent
    ##

    # Default plot and aggregation. Can get overridden at any level.
    plot_type = line
    aggregate_type = none
    # width = 1
    time_length = 86400    # == 24 hours

    # The following option merits an explanation. The y-axis scale used for plotting
    # can be controlled using option 'yscale'. It is a 3-way tuple, with
    # values (ylow, yhigh, min_interval). If set to "None", a parameter is
    # set automatically, otherwise the value is used. However, in the case of
    # min_interval, what is set is the *minimum* y-axis tick interval.
    yscale = None, None, None

    # For progressive vector plots, you can choose to rotate the vectors.
    # Positive is clockwise.
    # For my area, westerlies overwhelmingly predominate, so by rotating
    # positive 90 degrees, the average vector will point straight up.
    vector_rotate = 90

    [[day_images]]
        # This list determines which tables will appear on the day charts page, as well as in which order.
        image_items = daytemp-Bootstrap, daybarometer-Bootstrap, dayrain-Bootstrap, dayhumidity-Bootstrap, daywind-Bootstrap, daywinddir-Bootstrap

        x_label_format = %H:%M
        bottom_label_format = %x %X
        time_length = 97200    # == 27 hours

        [[[daytemp-Bootstrap]]]
            [[[[outTemp]]]]
                color = 0x4242b4
            [[[[dewpoint]]]]
                color = 0xb48242

        [[[daybarometer-Bootstrap]]]
            [[[[barometer]]]]

        [[[dayrain-Bootstrap]]]
            # Make sure the y-axis increment is at least 0.02 for the rain plot:
            yscale = None, None, 0.02
            plot_type = bar
            [[[[rain]]]]
                aggregate_type = sum
                aggregate_interval = 3600
                label = Rain (hourly total)

        [[[dayhumidity-Bootstrap]]]
            [[[[outHumidity]]]]

        [[[daywind-Bootstrap]]]
            [[[[windSpeed]]]]
            [[[[windGust]]]]

        [[[daywinddir-Bootstrap]]]
            # Hardwire in the y-axis scale for wind direction:
            yscale = 0.0, 360.0, 45.0
            # Don't join lines
            # Type of line. Only 'solid' or 'none' is offered now
            line_type = 'none'
            # Size of marker in pixels
            marker_size = 6
            # Type of marker. Pick one of 'cross', 'x', 'circle', 'box', or 'none'
            marker_type ='cross'
            [[[[windDir]]]]

        [[[dayradiation-Bootstrap]]]
            [[[[radiation]]]]

    [[week_images]]
        # This list determines which tables will appear on the week charts page, as well as in which order.
        image_items = weektemp-Bootstrap, weekbarometer-Bootstrap, weekrain-Bootstrap, weekhumidity-Bootstrap, weekwind-Bootstrap, weekwinddir-Bootstrap

        x_label_format = %d
        bottom_label_format = %x %X
        time_length = 604800    # == 7 days
        aggregate_type = avg
        aggregate_interval = 3600

        [[[weektemp-Bootstrap]]]
            [[[[outTemp]]]]
                color = 0x4242b4
            [[[[dewpoint]]]]
                color = 0xb48242

        [[[weekbarometer-Bootstrap]]]
            [[[[barometer]]]]

        [[[weekrain-Bootstrap]]]
            # Make sure the y-axis increment is at least 0.02 for the rain plot:
            yscale = None, None, 0.02
            plot_type = bar
            [[[[rain]]]]
                aggregate_type = sum
                aggregate_interval = 3600
                label = Rain (hourly total)

        [[[weekhumidity-Bootstrap]]]
            [[[[outHumidity]]]]

        [[[weekwind-Bootstrap]]]
            [[[[windSpeed]]]]
            [[[[windGust]]]]
                aggregate_type = max

        [[[weekwinddir-Bootstrap]]]
            # Hardwire in the y-axis scale for wind direction:
            yscale = 0.0, 360.0, 45.0
            # Don't join lines
            # Type of line. Only 'solid' or 'none' is offered now
            line_type = 'none'
            # Size of marker in pixels
            marker_size = 6
            # Type of marker. Pick one of 'cross', 'x', 'circle', 'box', or 'none'
            marker_type ='cross'
            [[[[windDir]]]]

        [[[weekradiation-Bootstrap]]]
            [[[[radiation]]]]
                aggregate_interval = 300

    [[month_images]]
        # This list determines which tables will appear on the month charts page, as well as in which order.
        image_items = monthtemp-Bootstrap, monthbarometer-Bootstrap, monthrain-Bootstrap, monthhumidity-Bootstrap, monthwind-Bootstrap, monthwinddir-Bootstrap

        x_label_format = %d
        bottom_label_format = %x %X
        time_length = 2592000    # == 30 days
        aggregate_type = avg
        aggregate_interval = 10800    # == 3 hours
        show_daynight = false

        [[[monthtemp-Bootstrap]]]
            [[[[outTemp]]]]
                color = 0x4242b4
            [[[[dewpoint]]]]
                color = 0xb48242

        [[[monthbarometer-Bootstrap]]]
            [[[[barometer]]]]

        [[[monthrain-Bootstrap]]]
            # Make sure the y-axis increment is at least 0.02 for the rain plot:
            yscale = None, None, 0.02
            plot_type = bar
            [[[[rain]]]]
                aggregate_type = sum
                aggregate_interval = 86400
                label = Rain (daily total)

        [[[monthhumidity-Bootstrap]]]
            [[[[outHumidity]]]]

        [[[monthwind-Bootstrap]]]
            [[[[windSpeed]]]]
            [[[[windGust]]]]
                aggregate_type = max

        [[[monthwinddir-Bootstrap]]]
            # Hardwire in the y-axis scale for wind direction:
            yscale = 0.0, 360.0, 45.0
            # Don't join lines
            # Type of line. Only 'solid' or 'none' is offered now
            line_type = 'none'
            # Size of marker in pixels
            marker_size = 6
            # Type of marker. Pick one of 'cross', 'x', 'circle', 'box', or 'none'
            marker_type ='cross'
            [[[[windDir]]]]

  [[year_images]]
        # This list determines which tables will appear on the year charts page, as well as in which order.
        image_items = yeartempmaxmin-Bootstrap, yearbarometer-Bootstrap, yearrain-Bootstrap, yearhumidity-Bootstrap, yearwind-Bootstrap, yearwinddir-Bootstrap

        x_label_format = %m/%y
        bottom_label_format = %x %X
        time_length = 31536000    # == 365 days
        aggregate_type = avg
        aggregate_interval = 86400
        show_daynight = false

        [[[yeartempmaxmin-Bootstrap]]]
            [[[[min_outTemp]]]]
                data_type = outTemp
                aggregate_type = min
                label = Min
            [[[[outTemp]]]]
                aggregate_type = max
                label = Max

        [[[yearbarometer-Bootstrap]]]
            [[[[barometer]]]]

        [[[yearrain-Bootstrap]]]
            # Make sure the y-axis increment is at least 0.02 for the rain plot:
            yscale = None, None, 0.02
            plot_type = bar
            [[[[rain]]]]
                aggregate_type = sum
                aggregate_interval = 86400
                label = Rain (daily total)

        [[[yearhumidity-Bootstrap]]]
            [[[[outHumidity]]]]

        [[[yearwind-Bootstrap]]]
            [[[[windSpeed]]]]
            [[[[windGust]]]]
                aggregate_type = max

        [[[yearwinddir-Bootstrap]]]
            # Hardwire in the y-axis scale for wind direction:
            yscale = 0.0, 360.0, 45.0
            # Don't join lines
            # Type of line. Only 'solid' or 'none' is offered now
            line_type = 'none'
            # Size of marker in pixels
            marker_size = 6
            # Type of marker. Pick one of 'cross', 'x', 'circle', 'box', or 'none'
            marker_type ='cross'
            [[[[windDir]]]]

############################################################################################
[JSONGenerator]
    enabled = true
    timespan = 27
    [[MQTT]]
        [[[connections]]]
            #[[[[public_mqtt]]]]
            #                broker_connection = wss://test.mosquitto.org:8081 # wss (encrypted) websocket connection
            #                [[[[[topics]]]]]
            #                      # JSON topics hold their value(s) in a JSON object. Every key can be matched to a gauge/chart dataset will work with weewx-mqtt, see: https://github.com/weewx/weewx/wiki/mqtt
            #                      [[[[[[weather/loop]]]]]]
            #                          type = JSON
            #                      [[[[[[weather/anothertopic]]]]]]
            #                          type = JSON
            #[[[[my_mqtt_with_public_tokens]]]]
            #    broker_connection = wss://mqtt.flespi.io:443 # wss (encrypted)
            #    mqtt_username = my_public_token # data is exposed to frontend! make sure you use data that is not confidential, like tokens with ACL
            #    mqtt_password = my_public_token # data is exposed to frontend! make sure you use data that is not confidential, like tokens with ACL
            #    [[[[[topics]]]]]
            #          # JSON topics hold their value(s) in a JSON object. Every key can be matched to a gauge/chart dataset will work with weewx-mqtt, see: https://github.com/weewx/weewx/wiki/mqtt
            #          [[[[[[weather/loop]]]]]]
            #              type = JSON
            #          [[[[[[weather/anothertopic]]]]]]
            #              type = JSON
            #Example
            #[[[[hiveMQ_public]]]]
            #    broker_connection = ws://broker.hivemq.com:8000/mqtt # unencrypted websocket connection without credentials
            #    [[[[[topics]]]]]
            #         # topic with type plain has just the value as payload, you have to specify a payload_key to match a gauge/chart dataset
            #         [[[[[[example/sensor/temp]]]]]]
            #             type = plain
            #             payload_key = outTemp_C # matches gauge outTemp and outTemp dataset in outTemp chart
            #         [[[[[[example/sensor/humi]]]]]]
            #             type = plain
            #             payload_key = outHumidity # matches gauge outHumidity and outHumidity dataset in outHumidity chart
            #         [[[[[[example/sensor/dewpoint]]]]]]
            #             type = plain
            #             payload_key = dewpoint_C # matches no gauge below but dewpoint dataset in outTemp chart
    
    [[ReportData]]
        includes = stationInfo.json.inc

[LiveGauges]
    # This list determines which tables will appear as gauges on every page, as well as in which order.
    live_gauge_items = outTemp, barometer, windDir, outHumidity, windSpeed, windGust

    # These are the defaults. All minvalue/maxvalue/lineColorUntil are in their target_unit as defined in
    # weeewx.conf:
    #
    # [StdConvert]
    # target_unit = US    # Options are 'US', 'METRICWX', or 'METRIC'
    #
    # Since US is default we use it here. Since each translation in lang/xx.conf defines it's own unit_system
    # you can override these settings there! Consider making your changes in the lang file only!
    #
    # If you override particular units in your lang file, also specify the gauge in this unit, e.g.:
    # 
    # [Units]
    #     [[Groups]]
    #        group_speed        = km_per_hour
    #
    # [LiveGauges]
    #     [[windSpeed]]
    #         minvalue = 0
    #         maxvalue = 100
    #         splitnumber = 5
    #         lineColorUntil = 75, maxvalue         # 75 marks "Sturm"
    #
    # One might tthink this also applies for "payload_key", but don't override it! Set it according to the target_unit in weewx.conf [MQTT] or [StdConvert]!
    # 
    # The payload keys are depending on your MQTT sources. If your source is weewx-mqtt (https://github.com/matthewwall/weewx-mqtt), the
    # payload keys below will fit. Since you can use an mix multiple sources, adapt to your needs

    [[outTemp]] #choose weewx field name
        #gaugeName = My custom name            # optional, default is the obs_type's label. Not translated.
        payload_key = outTemp_F                # outTemp_C if target_unit 'METRICWX', or 'METRIC'
        minvalue = 0
        maxvalue = 100
        splitnumber = 10                       # choose a splitnumber fitting minvalue and maxvalue: e.g.: 0/100: 10, for -20/40: 6
        lineColor = '#428bca', '#b44242'       # colors are RGBa
        lineColorUntil = 32, maxvalue          # color from start of gauge to value, change color of gauge ring to show important marks: 32 is freezing point
        decimals = 1                           # decimals for current value in gauge
        #heatMapEnabled = false                # disable heatmap for gauge, default true
        #animation = False                     # default true
        #stuckNeedleEnabled = false            # disable stuck needle for gauge, default true. While enabled, it will show the most recent value if there is no current value.

    [[barometer]]
        payload_key = barometer_inHg           # barometer_mbar if target_unit 'METRICWX', or 'METRIC'
        minvalue = 28
        maxvalue = 32
        splitnumber = 4
        lineColor = '#428bca', '#b44242'
        lineColorUntil = 29.92, maxvalue      # 29.92 is standard air pressure
        decimals = 1

    [[windDir]] #windDir is a special, circular direction gauge, options are limited
        payload_key = windDir
        lineColorN = '#428bca'
        lineColorS = '#b44242'
        decimals = 0

    [[outHumidity]]
        payload_key = outHumidity
        minvalue = 0
        maxvalue = 100
        splitnumber = 5
        lineColor = '#428bca'
        lineColorUntil = maxvalue
        decimals = 0
        #directionValuesEnabled = true        # enable for Ordinate Directions to show as Gauge Value

    [[windSpeed]]
        payload_key = windSpeed_mph           # windSpeed_mps if target_unit 'METRICWX', windSpeed_kph if 'METRIC'
        minvalue = 0
        maxvalue = 60
        splitnumber = 6
        lineColor = '#428bca', '#b44242'
        lineColorUntil = 46, maxvalue         # 46 marks strong/gale
        decimals = 0

    [[windGust]]
        payload_key = windGust_mph            # windSpeed_mps if target_unit 'METRICWX', windGust_mph if 'METRIC'
        minvalue = 0
        maxvalue = 100
        splitnumber = 10
        lineColor = '#428bca', '#b44242'
        lineColorUntil = 46, maxvalue         # 46 marks strong/gale
        decimals = 0

[LiveCharts]
    # This list determines which tables will appear on the live charts page, as well as in which order.
    live_chart_items = outTemp, barometer, rain, outHumidity, wind, windDir

    show_daynight = true
    # when transition from light to dark background starts and ends (height of sun in degrees):
    transition_angle = 8
    [[outTemp]] # choose freely
        #animation = False # default true
        [[[outTemp]]] #choose weewx field name
            #seriesName = My custom name            # optional, default is the obs_type's label. Not translated.
            payload_key = outTemp_F
            showMaxMarkPoint = true
            showMinMarkPoint = true
            showAvgMarkLine = true
            lineColor = '#b44242'
            decimals = 1
        [[[dewpoint]]]
            payload_key = dewpoint_F
            showMaxMarkPoint = false
            showMinMarkPoint = false
            showAvgMarkLine = false
            lineColor = '#428bca'
            decimals = 1

    [[barometer]]
        [[[barometer]]]
            payload_key = barometer_inHg
            showMaxMarkPoint = true
            showMinMarkPoint = true
            showAvgMarkLine = false
            lineColor = '#428bca'
            decimals = 2

    [[rain]]
        [[[rain]]]
            plotType = bar #new: specify plot type
            aggregateType = sum #new: specify type for aggregation
            aggregateInterval = 1800 #new: specify aggreagtion inteval in seconds for each series
            payload_key = rain_in
            showMaxMarkPoint = false
            showMinMarkPoint = false
            showAvgMarkLine = false
            lineColor = '#428bca'
            decimals = 2

    [[outHumidity]]
        [[[outHumidity]]]
            payload_key = outHumidity
            showMaxMarkPoint = true
            showMinMarkPoint = true
            showAvgMarkLine = false
            lineColor = '#428bca'
            decimals = 0

    [[wind]]
        [[[windSpeed]]]
            payload_key = windSpeed_mph
            showMaxMarkPoint = false
            showMinMarkPoint = false
            showAvgMarkLine = false
            lineColor = '#428bca'
            decimals = 0
        [[[windGust]]]
            payload_key = windGust_mph
            showMaxMarkPoint = true
            showMinMarkPoint = false
            showAvgMarkLine = false
            lineColor = '#b44242'
            decimals = 0

    [[windDir]]
        [[[windDir]]]
            payload_key = windDir
            showMaxMarkPoint = false
            showMinMarkPoint = false
            showAvgMarkLine = false
            lineColor = '#428bca'
            decimals = 0
            symbol = circle
            lineWidth = 0

# Combined line/bar chart Example
    [[radiation]]
        [[[radiation]]]
            payload_key = radiation
            #convertFunction = "function(value) { return value / 126.7; }" #you can do value conversions if needed
            showMaxMarkPoint = true
            showMinMarkPoint = false
            showAvgMarkLine = false
            lineColor = '#ffcd56'
            decimals = 0
        [[[maxSolarRad]]]
            plotType = line  #optional plot type, "line" is default
            payload_key = maxSolarRad
            showMaxMarkPoint = false
            showMinMarkPoint = false
            showAvgMarkLine = false
            lineColor = '#ffcd5677'
            decimals = 0
        [[[UV]]]
            yAxisIndex = 1  #to assign UV to the 2nd yAxis
            plotType = bar  #plot type, "line" is default
            aggregateType = avg
            aggregateInterval = 3600
            payload_key = UV
            showMaxMarkPoint = false
            showMinMarkPoint = false
            showAvgMarkLine = false
            lineColor = '#7f1ae555'
            decimals = 0
            minInterval = 1

# Scatter chart example
    [[lightning_strikes]]
        [[[lightning_distance]]]
            plotType = scatter
            dataReferences = lightning_strike_count
            showMaxMarkPoint = false
            showMinMarkPoint = false
            showAvgMarkLine = false
            lineColor = '#fc7f03'
            decimals = 0
            symbol = 'path://m 28.3 39 h 1.5 a 1 1 0 0 0 1 -1.5 l -7.1 -16.5 h 6.6 a 1 1 0 0 0 0.8 -1.5 l -10.7 -17 a 1 1 0 0 0 -0.7 -0.5 h -13.5 a 1 1 0 0 0 -0.8 1.7 l 9.1 10.3 h -5.4 a 1 1 0 0 0 -0.5 1 l 18 23 z'
            symbolSize = 'function (data) { return 5 + 3 * Math.sqrt(data[2]);}'
        [[[lightning_strike_count]]]
            plotType = scatter
            showMaxMarkPoint = false
            showMinMarkPoint = false
            showAvgMarkLine = false
            lineColor = '#fc7f03'
            decimals = 0
#
############################################################################################
#
# The list of generators that are to be run:
#
[Generators]
    generator_list = user.jsonengine.JSONGenerator, user.largeimagegenerator.LargeImageGenerator, weewx.imagegenerator.ImageGenerator, weewx.reportengine.CopyGenerator, weewx.cheetahgenerator.CheetahGenerator
